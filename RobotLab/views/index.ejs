<!DOCTYPE HTML>
<!--
	Created by Yuan
	html5up.net | @ajlkn
	Free for personal and commercial use under the CCA 3.0 license (html5up.net/license)
-->
<html>
<head>
  <title>GDSub</title>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <!--[if lte IE 8]><script src="assets/js/html5shiv.js"></script><![endif]-->
  <link rel="stylesheet" href="/assets/css/main.css" />
  <link rel="icon" href="/images/googledev_small.png"/>
  <!--[if lte IE 9]><link rel="stylesheet" href="assets/css/ie9.css" /><![endif]-->
  <!--[if lte IE 8]><link rel="stylesheet" href="assets/css/ie8.css" /><![endif]-->
  <script src="/socket.io/socket.io.js"></script>
  <noscript><link rel="stylesheet" href="/assets/css/noscript.css" /></noscript>
</head>
<body class="is-loading">

<!-- Wrapper -->
<div id="wrapper">

  <!-- Main -->
  <section id="main">
    <header>
      <h1>Google Developer Subtitles</h1>
      <h3>Translator</h3>
      <br/>

    </header>

    <hr />


    <div class="field">
      <li>
        <input type="file" id="srt_subtitle"/>
        <br>
        <br>
    </div>
    <div class="field">
        <ul class="actions">
        <li><a onclick="startTranslate()" class="button">Translate</a></li>
      </ul>
    </div>
      <hr />
      <a>GDSub Team <br><br>Email: yuan@gdsub.com</a>
  </section>

  <!-- Footer -->
  <footer></footer>

</div>

<!-- Scripts -->
<!--[if lte IE 8]><script src="assets/js/respond.min.js"></script><![endif]-->
<script>
    if ('addEventListener' in window) {
        window.addEventListener('load', function() { document.body.className = document.body.className.replace(/\bis-loading\b/, ''); });
        document.body.className += (navigator.userAgent.match(/(MSIE|rv:11\.0)/) ? ' is-ie' : '');
    }

    function startTranslate(){
        var upload_widget = document.getElementById('srt_subtitle');
        var current_file = upload_widget.files[0];
        console.log('current_file:' + current_file.name);

        uploadFile(current_file, document.location.origin + '/subtitle?token=' + token);


    }

    //upload subtitle file
    function uploadFile(file, url){

        var xhr = new XMLHttpRequest();
        var fd = new FormData();

        fd.append("name", "target subtitle");
        fd.append("fileToUpload", file);
        xhr.open('POST', url, true);

        xhr.onreadystatechange = function(){
            console.log('response data:' + xhr.responseText);

            if(xhr.readyState==4 && xhr.status==200){
                //result = true;
            }else{
                console.log('xhr.status=' + xhr.status + '  xhr.readyState=' + xhr.readyState);


            }
        }

        xhr.send(fd);
    }

    //download generated subtitle file
    function downloadFile(file){
        var xhr = new XMLHttpRequest();
        var url = document.location.origin + '/download?file=' + file;

        xhr.open('GET', url, true);

        xhr.onreadystatechange = function(){
            console.log('response data:' + xhr.responseText);

            if(xhr.readyState==4 && xhr.status==200){
                console.log('done');
                //result = true;
            }else{
                console.log('xhr.status=' + xhr.status + '  xhr.readyState=' + xhr.readyState);


            }
        }

        xhr.send();

    }

    var token = (new Date().getTime()) + '_gdsub';
    var socket = io({
        query:{
            token: token
        }
    });

    socket.connect();

    // Add a connect listener
    socket.on('connect',function() {
        console.log('Client has connected to the server!');
        socket.send('1001;hello world');
    });
    // Add a connect listener
    socket.on('message',function(msg) {
        console.log('message:' + msg);
        var type = msg.split(';')[0];
        var data = msg.split(';')[1];
        switch(type){
            case 'state':
                console.log('state:' + data);
                break;
            case 'finished':
                downloadFile(data);
                break;
        }
    });

    // Add a disconnect listener
    socket.on('disconnect',function() {
        console.log('The client has disconnected!');

    });
</script>

</body>
</html>
